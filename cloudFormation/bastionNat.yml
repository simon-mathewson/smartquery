AWSTemplateFormatVersion: '2010-09-09'
Description: 'Combined Bastion and NAT Gateway instance for secure RDS access and private subnet internet routing'

# To test SSH connectivity:
# ssh -i ~/.ssh/smartquery-bastion-key.pem ec2-user@<public-ip>

Resources:
  BastionKeyPair:
    Type: AWS::EC2::KeyPair
    Properties:
      KeyName: bastion-nat-key
      KeyType: ed25519

  BastionNatRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        - arn:aws:iam::aws:policy/AmazonSSMManagedEC2InstanceDefaultPolicy
      Policies:
        - PolicyName: AttachNatEniPolicy
          PolicyDocument:
            Statement:
              - Action:
                  - ec2:AttachNetworkInterface
                  - ec2:ModifyNetworkInterfaceAttribute
                Effect: Allow
                Resource: "*"
            Version: "2012-10-17"
        - PolicyName: AssociateNatAddressPolicy
          PolicyDocument:
            Statement:
              - Action:
                  - ec2:AssociateAddress
                  - ec2:DisassociateAddress
                Effect: Allow
                Resource: "*"
            Version: "2012-10-17"

  BastionNatInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref BastionNatRole

  BastionNatSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: 'Security group for combined Bastion and NAT Gateway EC2 instance'
      VpcId: !ImportValue CloudVpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
          Description: 'SSH access for bastion functionality'
        - IpProtocol: -1
          CidrIp: 10.0.0.0/16
          Description: 'Allow all traffic from VPC private subnets (covers all instances)'
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
          Description: 'Allow all outbound traffic for NAT functionality'

  BastionNatElasticIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  BastionNatInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-04eb0af991f1fe55d # fck-nat ARM eu-central-1
      InstanceType: t4g.nano
      KeyName: !Ref BastionKeyPair
      SecurityGroupIds:
        - !Ref BastionNatSecurityGroup
      SubnetId: !ImportValue CloudPublicSubnet1
      SourceDestCheck: false
      IamInstanceProfile: !Ref BastionNatInstanceProfile
      UserData: !Base64 |
        #!/bin/bash
        echo "eni_id=${FckNatInterface}" >> /etc/fck-nat.conf
        service fck-nat restart

  BastionNatEIPAssociation:
    Type: AWS::EC2::EIPAssociation
    Properties:
      AllocationId: !GetAtt BastionNatElasticIP.AllocationId
      InstanceId: !Ref BastionNatInstance

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !ImportValue CloudVpcId

  PrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      InstanceId: !Ref BastionNatInstance

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !ImportValue CloudPrivateSubnet1

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !ImportValue CloudPrivateSubnet2

  DbSecurityGroupFromBastionIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !ImportValue CloudDbSecurityGroup
      IpProtocol: tcp
      ToPort: 5432
      FromPort: 5432
      SourceSecurityGroupId: !Ref BastionNatSecurityGroup

Outputs:
  BastionNatInstance:
    Description: 'Bastion and NAT Gateway EC2 instance ID'
    Value: !Ref BastionNatInstance
    Export:
      Name: CloudBastionNatInstance

  BastionNatSecurityGroup:
    Description: 'Security group ID of the Bastion and NAT Gateway'
    Value: !Ref BastionNatSecurityGroup
    Export:
      Name: CloudBastionNatSecurityGroup

  BastionNatPublicIP:
    Description: 'Public IP address of the bastion and NAT gateway'
    Value: !Ref BastionNatElasticIP
    Export:
      Name: BastionNatPublicIP
