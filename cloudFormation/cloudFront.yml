Resources:
  CloudFrontFunctionRewriteUrls:
    Type: "AWS::CloudFront::Function"
    Properties:
      Name: "rewrite-urls"
      AutoPublish: true
      FunctionConfig:
        Comment: "Rewrite URLs for Next.js static export"
        Runtime: "cloudfront-js-2.0"
      FunctionCode: |
        function handler(event) {
          var request = event.request;
          var uri = request.uri;
          
          // If the URI doesn't end with a file extension, try adding .html
          if (!uri.includes('.') || uri.endsWith('/')) {
            // Remove trailing slash if present
            if (uri.endsWith('/')) {
              uri = uri.slice(0, -1);
            }
            
            // If it's not the root path, try adding .html
            if (uri !== '') {
              request.uri = uri + '.html';
            }
          }
          
          return request;
        }

  CloudFrontDistributionDabaseUi:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        Logging:
          IncludeCookies: false
          Bucket: ""
          Prefix: ""
        Comment: ""
        DefaultRootObject: "index.html"
        Origins:
          - ConnectionTimeout: 10
            OriginAccessControlId: ""
            ConnectionAttempts: 3
            OriginCustomHeaders: []
            DomainName: "dabase-ui.s3-website.eu-central-1.amazonaws.com"
            OriginShield:
              Enabled: false
            OriginPath: ""
            Id: "dabase-ui.s3.eu-central-1.amazonaws.com"
            CustomOriginConfig:
              OriginKeepaliveTimeout: 5
              OriginReadTimeout: 30
              OriginSSLProtocols:
                - "SSLv3"
                - "TLSv1"
                - "TLSv1.1"
                - "TLSv1.2"
              HTTPSPort: 443
              HTTPPort: 80
              OriginProtocolPolicy: "http-only"
        ViewerCertificate:
          MinimumProtocolVersion: "TLSv1.2_2021"
          SslSupportMethod: "sni-only"
          AcmCertificateArn: "arn:aws:acm:us-east-1:339712876040:certificate/03ebcb0f-f956-448b-b64e-f2e2c9425a97"
        PriceClass: "PriceClass_100"
        DefaultCacheBehavior:
          Compress: true
          TrustedKeyGroups: []
          FunctionAssociations: []
          AllowedMethods:
            - "HEAD"
            - "GET"
            - "OPTIONS"
          CachedMethods:
            - "HEAD"
            - "GET"
          LambdaFunctionAssociations: []
          SmoothStreaming: false
          TargetOriginId: "dabase-ui.s3.eu-central-1.amazonaws.com"
          ViewerProtocolPolicy: "redirect-to-https"
          CachePolicyId: "658327ea-f89d-4fab-a63d-7e88639e58f6" # CachingOptmized
          TrustedSigners: []
          FieldLevelEncryptionId: ""
        Staging: false
        CustomErrorResponses:
          - ErrorCachingMinTTL: 10
            ResponseCode: 200
            ErrorCode: 404
            ResponsePagePath: "/index.html"
          - ErrorCachingMinTTL: 10
            ResponseCode: 200
            ErrorCode: 403
            ResponsePagePath: "/index.html"
        ContinuousDeploymentPolicyId: ""
        OriginGroups:
          Quantity: 0
          Items: []
        Enabled: true
        Aliases:
          - "dabase.dev"
        IPV6Enabled: true
        HttpVersion: "http2"
        Restrictions:
          GeoRestriction:
            Locations: []
            RestrictionType: "none"
        CacheBehaviors: []
  CloudFrontDistributionDabaseAbout:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        Logging:
          IncludeCookies: false
          Bucket: ""
          Prefix: ""
        Comment: ""
        DefaultRootObject: "index.html"
        Origins:
          - ConnectionTimeout: 10
            OriginAccessControlId: ""
            ConnectionAttempts: 3
            OriginCustomHeaders: []
            DomainName: "dabase-about.s3-website.eu-central-1.amazonaws.com"
            OriginShield:
              Enabled: false
            OriginPath: ""
            Id: "dabase-about.s3.eu-central-1.amazonaws.com"
            CustomOriginConfig:
              OriginKeepaliveTimeout: 5
              OriginReadTimeout: 30
              OriginSSLProtocols:
                - "SSLv3"
                - "TLSv1"
                - "TLSv1.1"
                - "TLSv1.2"
              HTTPSPort: 443
              HTTPPort: 80
              OriginProtocolPolicy: "http-only"
        ViewerCertificate:
          MinimumProtocolVersion: "TLSv1.2_2021"
          SslSupportMethod: "sni-only"
          AcmCertificateArn: "arn:aws:acm:us-east-1:339712876040:certificate/03ebcb0f-f956-448b-b64e-f2e2c9425a97"
        PriceClass: "PriceClass_100"
        DefaultCacheBehavior:
          Compress: true
          TrustedKeyGroups: []
          FunctionAssociations:
            - EventType: "viewer-request"
              FunctionARN: !GetAtt CloudFrontFunctionRewriteUrls.FunctionARN
          AllowedMethods:
            - "HEAD"
            - "GET"
            - "OPTIONS"
          CachedMethods:
            - "HEAD"
            - "GET"
          LambdaFunctionAssociations: []
          SmoothStreaming: false
          TargetOriginId: "dabase-about.s3.eu-central-1.amazonaws.com"
          ViewerProtocolPolicy: "redirect-to-https"
          CachePolicyId: "658327ea-f89d-4fab-a63d-7e88639e58f6" # CachingOptmized
          TrustedSigners: []
          FieldLevelEncryptionId: ""
        Staging: false
        CustomErrorResponses:
          - ErrorCachingMinTTL: 10
            ResponseCode: 200
            ErrorCode: 404
            ResponsePagePath: "/index.html"
          - ErrorCachingMinTTL: 10
            ResponseCode: 200
            ErrorCode: 403
            ResponsePagePath: "/index.html"
        ContinuousDeploymentPolicyId: ""
        OriginGroups:
          Quantity: 0
          Items: []
        Enabled: true
        Aliases:
          - "about.dabase.dev"
        IPV6Enabled: true
        HttpVersion: "http2"
        Restrictions:
          GeoRestriction:
            Locations: []
            RestrictionType: "none"
        CacheBehaviors: []

Outputs:
  CloudFrontDistributionDabaseUiDomainName:
    Value: !GetAtt CloudFrontDistributionDabaseUi.DomainName
    Export:
      Name: "CloudFrontDistributionDabaseUiDomainName"
  CloudFrontDistributionDabaseUi:
    Value: !Ref CloudFrontDistributionDabaseUi
    Export:
      Name: "CloudFrontDistributionDabaseUi"
  CloudFrontDistributionDabaseAboutDomainName:
    Value: !GetAtt CloudFrontDistributionDabaseAbout.DomainName
    Export:
      Name: "CloudFrontDistributionDabaseAboutDomainName"
  CloudFrontDistributionDabaseAbout:
    Value: !Ref CloudFrontDistributionDabaseAbout
    Export:
      Name: "CloudFrontDistributionDabaseAbout"
