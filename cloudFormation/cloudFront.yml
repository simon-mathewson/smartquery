Resources:
  CloudFrontFunctionRewriteUrls:
    Type: "AWS::CloudFront::Function"
    Properties:
      Name: "rewrite-urls"
      AutoPublish: true
      FunctionConfig:
        Comment: "Rewrite URLs for Next.js static export"
        Runtime: "cloudfront-js-2.0"
      FunctionCode: |
        function handler(event) {
          var request = event.request;
          var uri = request.uri;
          
          // If the URI doesn't end with a file extension, try adding .html
          if (!uri.includes('.') || uri.endsWith('/')) {
            // Remove trailing slash if present
            if (uri.endsWith('/')) {
              uri = uri.slice(0, -1);
            }
            
            // If it's not the root path, try adding .html
            if (uri !== '') {
              request.uri = uri + '.html';
            }
          }
          
          return request;
        }

  CloudFrontDistributionDabaseUi:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        Logging:
          IncludeCookies: false
          Bucket: ""
          Prefix: ""
        Comment: ""
        DefaultRootObject: "index.html"
        Origins:
          - ConnectionTimeout: 10
            OriginAccessControlId: ""
            ConnectionAttempts: 3
            OriginCustomHeaders: []
            DomainName: "dabase-ui.s3-website.eu-central-1.amazonaws.com"
            OriginShield:
              Enabled: false
            OriginPath: ""
            Id: "dabase-ui.s3.eu-central-1.amazonaws.com"
            CustomOriginConfig:
              OriginKeepaliveTimeout: 5
              OriginReadTimeout: 30
              OriginSSLProtocols:
                - "SSLv3"
                - "TLSv1"
                - "TLSv1.1"
                - "TLSv1.2"
              HTTPSPort: 443
              HTTPPort: 80
              OriginProtocolPolicy: "http-only"
        ViewerCertificate:
          MinimumProtocolVersion: "TLSv1.2_2021"
          SslSupportMethod: "sni-only"
          AcmCertificateArn: "arn:aws:acm:us-east-1:339712876040:certificate/97319459-7547-4ced-96ba-74c0149941a4"
        PriceClass: "PriceClass_All"
        DefaultCacheBehavior:
          Compress: true
          TrustedKeyGroups: []
          FunctionAssociations: []
          AllowedMethods:
            - "HEAD"
            - "GET"
            - "OPTIONS"
          CachedMethods:
            - "HEAD"
            - "GET"
          LambdaFunctionAssociations: []
          SmoothStreaming: false
          TargetOriginId: "dabase-ui.s3.eu-central-1.amazonaws.com"
          ViewerProtocolPolicy: "redirect-to-https"
          CachePolicyId: "658327ea-f89d-4fab-a63d-7e88639e58f6" # CachingOptmized
          TrustedSigners: []
          FieldLevelEncryptionId: ""
        Staging: false
        CustomErrorResponses:
          - ErrorCachingMinTTL: 10
            ResponseCode: 200
            ErrorCode: 404
            ResponsePagePath: "/index.html"
          - ErrorCachingMinTTL: 10
            ResponseCode: 200
            ErrorCode: 403
            ResponsePagePath: "/index.html"
        ContinuousDeploymentPolicyId: ""
        OriginGroups:
          Quantity: 0
          Items: []
        Enabled: true
        Aliases:
          - "smartquery.dev"
        IPV6Enabled: true
        HttpVersion: "http2"
        Restrictions:
          GeoRestriction:
            Locations: []
            RestrictionType: "none"
        CacheBehaviors: []
  CloudFrontDistributionDabaseAbout:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        Logging:
          IncludeCookies: false
          Bucket: ""
          Prefix: ""
        Comment: ""
        DefaultRootObject: "index.html"
        Origins:
          - ConnectionTimeout: 10
            OriginAccessControlId: ""
            ConnectionAttempts: 3
            OriginCustomHeaders: []
            DomainName: "dabase-about.s3-website.eu-central-1.amazonaws.com"
            OriginShield:
              Enabled: false
            OriginPath: ""
            Id: "dabase-about.s3.eu-central-1.amazonaws.com"
            CustomOriginConfig:
              OriginKeepaliveTimeout: 5
              OriginReadTimeout: 30
              OriginSSLProtocols:
                - "SSLv3"
                - "TLSv1"
                - "TLSv1.1"
                - "TLSv1.2"
              HTTPSPort: 443
              HTTPPort: 80
              OriginProtocolPolicy: "http-only"
        ViewerCertificate:
          MinimumProtocolVersion: "TLSv1.2_2021"
          SslSupportMethod: "sni-only"
          AcmCertificateArn: "arn:aws:acm:us-east-1:339712876040:certificate/97319459-7547-4ced-96ba-74c0149941a4"
        PriceClass: "PriceClass_All"
        DefaultCacheBehavior:
          Compress: true
          TrustedKeyGroups: []
          FunctionAssociations:
            - EventType: "viewer-request"
              FunctionARN: !GetAtt CloudFrontFunctionRewriteUrls.FunctionARN
          AllowedMethods:
            - "HEAD"
            - "GET"
            - "OPTIONS"
          CachedMethods:
            - "HEAD"
            - "GET"
          LambdaFunctionAssociations: []
          SmoothStreaming: false
          TargetOriginId: "dabase-about.s3.eu-central-1.amazonaws.com"
          ViewerProtocolPolicy: "redirect-to-https"
          CachePolicyId: "658327ea-f89d-4fab-a63d-7e88639e58f6" # CachingOptmized
          TrustedSigners: []
          FieldLevelEncryptionId: ""
        Staging: false
        CustomErrorResponses:
          - ErrorCachingMinTTL: 10
            ResponseCode: 200
            ErrorCode: 404
            ResponsePagePath: "/index.html"
          - ErrorCachingMinTTL: 10
            ResponseCode: 200
            ErrorCode: 403
            ResponsePagePath: "/index.html"
        ContinuousDeploymentPolicyId: ""
        OriginGroups:
          Quantity: 0
          Items: []
        Enabled: true
        Aliases:
          - "about.smartquery.dev"
        IPV6Enabled: true
        HttpVersion: "http2"
        Restrictions:
          GeoRestriction:
            Locations: []
            RestrictionType: "none"
        CacheBehaviors: []

  # S3 Bucket for dabase.dev redirect
  S3BucketDabaseDevRedirect:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: dabase-dev-redirect
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html

  # S3 Bucket Policy for dabase.dev redirect
  S3BucketPolicyDabaseDevRedirect:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3BucketDabaseDevRedirect
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal: "*"
            Action: s3:GetObject
            Resource: !Sub "arn:${AWS::Partition}:s3:::${S3BucketDabaseDevRedirect}/*"

  # CloudFront Function for dabase.dev redirect
  CloudFrontFunctionDabaseDevRedirect:
    Type: AWS::CloudFront::Function
    Properties:
      Name: "dabase-dev-redirect"
      AutoPublish: true
      FunctionConfig:
        Comment: "Redirect dabase.dev to smartquery.dev"
        Runtime: "cloudfront-js-2.0"
      FunctionCode: |
        function handler(event) {
          var request = event.request;
          var uri = request.uri;
          var querystring = request.querystring;
          
          // Build the new URL
          var newUrl = 'https://smartquery.dev' + uri;
          
          // Add query string if present
          if (querystring && Object.keys(querystring).length > 0) {
            var queryParams = [];
            for (var key in querystring) {
              if (querystring[key].value) {
                queryParams.push(key + '=' + querystring[key].value);
              }
            }
            if (queryParams.length > 0) {
              newUrl += '?' + queryParams.join('&');
            }
          }
          
          return {
            statusCode: 301,
            statusDescription: 'Moved Permanently',
            headers: {
              'location': { value: newUrl }
            }
          };
        }

  # CloudFront Distribution for dabase.dev redirect
  CloudFrontDistributionDabaseDevRedirect:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Comment: "Redirect dabase.dev to smartquery.dev"
        Origins:
          - DomainName: !GetAtt S3BucketDabaseDevRedirect.RegionalDomainName
            Id: "dabase-dev-redirect-s3"
            S3OriginConfig:
              OriginAccessIdentity: ""
        ViewerCertificate:
          MinimumProtocolVersion: "TLSv1.2_2021"
          SslSupportMethod: "sni-only"
          AcmCertificateArn: "arn:aws:acm:us-east-1:339712876040:certificate/03ebcb0f-f956-448b-b64e-f2e2c9425a97"
        PriceClass: "PriceClass_All"
        DefaultCacheBehavior:
          TargetOriginId: "dabase-dev-redirect-s3"
          ViewerProtocolPolicy: "redirect-to-https"
          FunctionAssociations:
            - EventType: "viewer-request"
              FunctionARN: !GetAtt CloudFrontFunctionDabaseDevRedirect.FunctionARN
          AllowedMethods:
            - "HEAD"
            - "GET"
            - "OPTIONS"
          CachedMethods:
            - "HEAD"
            - "GET"
          CachePolicyId: "4135ea2d-6df8-44a3-9df3-4b5a84be39ad" # CachingDisabled
        Enabled: true
        Aliases:
          - "dabase.dev"
        IPV6Enabled: true
        HttpVersion: "http2"
        Restrictions:
          GeoRestriction:
            Locations: []
            RestrictionType: "none"

  # S3 Bucket for about.dabase.dev redirect
  S3BucketAboutDabaseDevRedirect:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: about-dabase-dev-redirect
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html

  # S3 Bucket Policy for about.dabase.dev redirect
  S3BucketPolicyAboutDabaseDevRedirect:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3BucketAboutDabaseDevRedirect
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal: "*"
            Action: s3:GetObject
            Resource: !Sub "arn:${AWS::Partition}:s3:::${S3BucketAboutDabaseDevRedirect}/*"

  # CloudFront Function for about.dabase.dev redirect
  CloudFrontFunctionAboutDabaseDevRedirect:
    Type: AWS::CloudFront::Function
    Properties:
      Name: "about-dabase-dev-redirect"
      AutoPublish: true
      FunctionConfig:
        Comment: "Redirect about.dabase.dev to about.smartquery.dev"
        Runtime: "cloudfront-js-2.0"
      FunctionCode: |
        function handler(event) {
          var request = event.request;
          var uri = request.uri;
          var querystring = request.querystring;
          
          // Build the new URL
          var newUrl = 'https://about.smartquery.dev' + uri;
          
          // Add query string if present
          if (querystring && Object.keys(querystring).length > 0) {
            var queryParams = [];
            for (var key in querystring) {
              if (querystring[key].value) {
                queryParams.push(key + '=' + querystring[key].value);
              }
            }
            if (queryParams.length > 0) {
              newUrl += '?' + queryParams.join('&');
            }
          }
          
          return {
            statusCode: 301,
            statusDescription: 'Moved Permanently',
            headers: {
              'location': { value: newUrl }
            }
          };
        }

  # CloudFront Distribution for about.dabase.dev redirect
  CloudFrontDistributionAboutDabaseDevRedirect:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Comment: "Redirect about.dabase.dev to about.smartquery.dev"
        Origins:
          - DomainName: !GetAtt S3BucketAboutDabaseDevRedirect.RegionalDomainName
            Id: "about-dabase-dev-redirect-s3"
            S3OriginConfig:
              OriginAccessIdentity: ""
        ViewerCertificate:
          MinimumProtocolVersion: "TLSv1.2_2021"
          SslSupportMethod: "sni-only"
          AcmCertificateArn: "arn:aws:acm:us-east-1:339712876040:certificate/03ebcb0f-f956-448b-b64e-f2e2c9425a97"
        PriceClass: "PriceClass_All"
        DefaultCacheBehavior:
          TargetOriginId: "about-dabase-dev-redirect-s3"
          ViewerProtocolPolicy: "redirect-to-https"
          FunctionAssociations:
            - EventType: "viewer-request"
              FunctionARN: !GetAtt CloudFrontFunctionAboutDabaseDevRedirect.FunctionARN
          AllowedMethods:
            - "HEAD"
            - "GET"
            - "OPTIONS"
          CachedMethods:
            - "HEAD"
            - "GET"
          CachePolicyId: "4135ea2d-6df8-44a3-9df3-4b5a84be39ad" # CachingDisabled
        Enabled: true
        Aliases:
          - "about.dabase.dev"
        IPV6Enabled: true
        HttpVersion: "http2"
        Restrictions:
          GeoRestriction:
            Locations: []
            RestrictionType: "none"

Outputs:
  CloudFrontDistributionDabaseUiDomainName:
    Value: !GetAtt CloudFrontDistributionDabaseUi.DomainName
    Export:
      Name: "CloudFrontDistributionDabaseUiDomainName"
  CloudFrontDistributionDabaseUi:
    Value: !Ref CloudFrontDistributionDabaseUi
    Export:
      Name: "CloudFrontDistributionDabaseUi"
  CloudFrontDistributionDabaseAboutDomainName:
    Value: !GetAtt CloudFrontDistributionDabaseAbout.DomainName
    Export:
      Name: "CloudFrontDistributionDabaseAboutDomainName"
  CloudFrontDistributionDabaseAbout:
    Value: !Ref CloudFrontDistributionDabaseAbout
    Export:
      Name: "CloudFrontDistributionDabaseAbout"
  CloudFrontDistributionDabaseDevRedirectDomainName:
    Value: !GetAtt CloudFrontDistributionDabaseDevRedirect.DomainName
    Export:
      Name: "CloudFrontDistributionDabaseDevRedirectDomainName"
  CloudFrontDistributionAboutDabaseDevRedirectDomainName:
    Value: !GetAtt CloudFrontDistributionAboutDabaseDevRedirect.DomainName
    Export:
      Name: "CloudFrontDistributionAboutDabaseDevRedirectDomainName"
