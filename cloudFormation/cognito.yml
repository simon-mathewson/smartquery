Resources:
  CognitoIdentityPool:
    Type: AWS::Cognito::IdentityPool
    Properties:
      AllowUnauthenticatedIdentities: true
      IdentityPoolName: smartquery

  ManagedPolicyCognito:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      Path: "/service-role/"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Resource: "*"
            Action: "rum:PutRumEvents"
            Effect: "Allow"

  IAMRoleCognito:
    Type: "AWS::IAM::Role"
    Properties:
      Path: "/service-role/"
      ManagedPolicyArns:
        - !Ref ManagedPolicyCognito
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Action: "sts:AssumeRoleWithWebIdentity"
          Effect: "Allow"
          Principal:
            Federated: "cognito-identity.amazonaws.com"
          Condition:
            StringEquals:
              'cognito-identity.amazonaws.com:aud': !GetAtt CognitoIdentityPool.Id
            'ForAnyValue:StringLike':
              'cognito-identity.amazonaws.com:amr': "unauthenticated"

  CognitoIdentityPoolRoleAttachment:
    Type: AWS::Cognito::IdentityPoolRoleAttachment
    Properties:
      IdentityPoolId: !Ref CognitoIdentityPool
      Roles:
        unauthenticated: !GetAtt IAMRoleCognito.Arn

Outputs:
  CognitoIdentityPoolId:
    Description: "Cognito Identity Pool ID"
    Value: !Ref CognitoIdentityPool
    Export:
      Name: CognitoIdentityPoolId
  CognitoIAMRoleArn:
    Description: "Cognito IAM Role ARN"
    Value: !GetAtt IAMRoleCognito.Arn
    Export:
      Name: CognitoIAMRoleArn
