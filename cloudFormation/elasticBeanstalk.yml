AWSTemplateFormatVersion: '2010-09-09'
Description: 'Elastic Beanstalk environment for Node.js application'

Resources:
  ElasticBeanstalkApplication:
    Type: AWS::ElasticBeanstalk::Application
    Properties:
      ApplicationName: smartquery-cloud
      Description: 'Cloud'

  ElasticBeanstalkIamInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: smartquery-cloud-instance-profile
      Path: /
      Roles:
        - !Ref ElasticBeanstalkIamRole

  ElasticBeanstalkIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkWebTier
        - arn:aws:iam::aws:policy/AmazonSESFullAccess
      Policies:
        - PolicyName: RdsSecretAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource: "*"

  CloudLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: smartquery-cloud-elb
      Scheme: internet-facing
      SecurityGroups:
        - !ImportValue CloudELBSecurityGroup
      Subnets:
        - !ImportValue CloudPublicSubnet1
        - !ImportValue CloudPublicSubnet2

  # Needed because a default rule with target group is needed, not actually used because EB
  # creates its own target group.
  CloudLoadBalancerTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckPath: /health
      Name: smartquery-cloud-elb-target
      Port: 8080
      Protocol: HTTP
      VpcId: !ImportValue CloudVpcId

  CloudLoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      Certificates:
        - CertificateArn: arn:aws:acm:eu-central-1:339712876040:certificate/bfafb1b7-ea8c-4be2-9e7b-50cb5d2c5c9c
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref CloudLoadBalancerTargetGroup
      LoadBalancerArn: !Ref CloudLoadBalancer
      Port: 443
      Protocol: HTTPS

  ElasticBeanstalkEnvironment:
    Type: AWS::ElasticBeanstalk::Environment
    DependsOn: ElasticBeanstalkApplication
    Properties:
      ApplicationName: smartquery-cloud
      EnvironmentName: smartquery-cloud
      SolutionStackName: '64bit Amazon Linux 2023 v6.5.2 running Node.js 22'
      OptionSettings:
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: InstanceType
          Value: t2.micro
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: SecurityGroups
          Value: !ImportValue CloudElasticBeanstalkEnvironmentSecurityGroup
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: IamInstanceProfile
          Value: !Ref ElasticBeanstalkIamInstanceProfile
        - Namespace: aws:autoscaling:asg
          OptionName: MinSize
          Value: 1
        - Namespace: aws:autoscaling:asg
          OptionName: MaxSize
          Value: 1
        - Namespace: aws:elasticbeanstalk:environment
          OptionName: EnvironmentType
          Value: LoadBalanced
        - Namespace: aws:elasticbeanstalk:environment
          OptionName: LoadBalancerType
          Value: application
        - Namespace: aws:elasticbeanstalk:environment
          OptionName: LoadBalancerIsShared
          Value: true
        - Namespace: aws:ec2:vpc
          OptionName: VPCId
          Value: !ImportValue CloudVpcId
        - Namespace: aws:ec2:vpc
          OptionName: Subnets
          Value: !ImportValue CloudPrivateSubnets
        - Namespace: aws:ec2:vpc
          OptionName: ELBSubnets
          Value: !ImportValue CloudPublicSubnets
        - Namespace: aws:elasticbeanstalk:application:environmentsecrets
          OptionName: SMARTQUERY_CLOUD_DB_SECRET
          Value: !ImportValue CloudDbSecretArn
        - Namespace: aws:elasticbeanstalk:application:environmentsecrets
          OptionName: GOOGLE_AI_API_KEY
          Value: !ImportValue CloudGoogleAiApiKeyArn
        - Namespace: aws:elasticbeanstalk:application:environmentsecrets
          OptionName: JWT_SECRET
          Value: !ImportValue CloudJwtSecretArn
        - Namespace: aws:elasticbeanstalk:application:environmentsecrets
          OptionName: STRIPE_API_KEY
          Value: !ImportValue CloudStripeApiKeyArn
        - Namespace: aws:elasticbeanstalk:application:environmentsecrets
          OptionName: STRIPE_WEBHOOK_SECRET
          Value: !ImportValue CloudStripeWebhookSecretArn
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: SES_EMAIL_IDENTITY_ARN
          Value: !ImportValue SESEmailIdentityArn
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: AWS_REGION
          Value: !Ref AWS::Region
        - Namespace: aws:elasticbeanstalk:cloudwatch:logs
          OptionName: StreamLogs
          Value: true
        - Namespace: aws:elbv2:loadbalancer
          OptionName: SharedLoadBalancer
          Value: !Ref CloudLoadBalancer
        - Namespace: aws:elbv2:listener:443
          OptionName: Rules
          Value: default,hostheaders
        - Namespace: aws:elbv2:listenerrule:hostheaders
          OptionName: HostHeaders
          Value: cloud.smartquery.dev
        - Namespace: aws:elasticbeanstalk:application
          OptionName: 'Application Healthcheck URL'
          Value: HTTPS:443/health
        - Namespace: aws:elasticbeanstalk:environment:process:default
          OptionName: HealthCheckPath
          Value: /health
        - Namespace: aws:elasticbeanstalk:environment:process:default
          OptionName: Port
          Value: 8080

Outputs:
  ElasticBeanstalkEnvironmentEndpointUrl:
    Description: "Elastic Beanstalk Environment Endpoint URL"
    Value: !GetAtt ElasticBeanstalkEnvironment.EndpointURL
    Export:
      Name: CloudElasticBeanstalkEndpointUrl

  CloudLoadBalancerArn:
    Description: "Cloud Load Balancer ARN"
    Value: !Ref CloudLoadBalancer
    Export:
      Name: CloudLoadBalancerArn
