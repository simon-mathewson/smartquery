Resources:
  S3BucketCodePipeline:
    Type: "AWS::S3::Bucket"
    DeletionPolicy: "Delete"
    UpdateReplacePolicy: "Delete"
    Properties:
      PublicAccessBlockConfiguration:
        RestrictPublicBuckets: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        BlockPublicAcls: true
      BucketName: "smartquery-codepipeline"
      OwnershipControls:
        Rules:
          - ObjectOwnership: "BucketOwnerEnforced"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - BucketKeyEnabled: true
            ServerSideEncryptionByDefault:
              SSEAlgorithm: "AES256"

  S3BucketSmartqueryLink:
    Type: "AWS::S3::Bucket"
    DeletionPolicy: "Delete"
    UpdateReplacePolicy: "Delete"
    Properties:
      PublicAccessBlockConfiguration:
        RestrictPublicBuckets: false
        IgnorePublicAcls: false
        BlockPublicPolicy: false
        BlockPublicAcls: false
      BucketName: "smartquery-link"
      OwnershipControls:
        Rules:
          - ObjectOwnership: "BucketOwnerEnforced"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - BucketKeyEnabled: true
            ServerSideEncryptionByDefault:
              SSEAlgorithm: "AES256"

  S3BucketPolicySmartqueryLink:
    Type: "AWS::S3::BucketPolicy"
    DeletionPolicy: "Delete"
    UpdateReplacePolicy: "Delete"
    Properties:
      Bucket: !Ref S3BucketSmartqueryLink
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Resource: "arn:aws:s3:::smartquery-link/*"
            Action: "s3:GetObject"
            Effect: "Allow"
            Principal: "*"
            Sid: "PublicReadGetObject"

  S3BucketSmartqueryCloudSource:
    Type: "AWS::S3::Bucket"
    DeletionPolicy: "Delete"
    UpdateReplacePolicy: "Delete"
    Properties:
      PublicAccessBlockConfiguration:
        RestrictPublicBuckets: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        BlockPublicAcls: true
      BucketName: "smartquery-cloud-source"
      OwnershipControls:
        Rules:
          - ObjectOwnership: "BucketOwnerEnforced"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - BucketKeyEnabled: true
            ServerSideEncryptionByDefault:
              SSEAlgorithm: "AES256"
      LifecycleConfiguration:
        Rules:
          - Id: DeleteAfter24Hours
            Status: Enabled
            ExpirationInDays: 1

  S3BucketSmartqueryUi:
    Type: "AWS::S3::Bucket"
    DeletionPolicy: "Delete"
    UpdateReplacePolicy: "Delete"
    Properties:
      WebsiteConfiguration:
        IndexDocument: "index.html"
        ErrorDocument: "index.html"
      PublicAccessBlockConfiguration:
        RestrictPublicBuckets: false
        IgnorePublicAcls: false
        BlockPublicPolicy: false
        BlockPublicAcls: false
      BucketName: "smartquery-ui"
      CorsConfiguration:
        CorsRules:
          - MaxAge: 3000
            AllowedMethods:
              - "GET"
              - "POST"
              - "PUT"
            AllowedOrigins:
              - "*"
            AllowedHeaders:
              - "*"
      OwnershipControls:
        Rules:
          - ObjectOwnership: "BucketOwnerEnforced"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - BucketKeyEnabled: true
            ServerSideEncryptionByDefault:
              SSEAlgorithm: "AES256"

  S3BucketPolicySmartqueryUi:
    Type: "AWS::S3::BucketPolicy"
    DeletionPolicy: "Delete"
    UpdateReplacePolicy: "Delete"
    Properties:
      Bucket: !Ref S3BucketSmartqueryUi
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Resource: "arn:aws:s3:::smartquery-ui/*"
            Action: "s3:GetObject"
            Effect: "Allow"
            Principal: "*"
            Sid: "PublicReadGetObject"

  S3BucketSmartqueryAbout:
    Type: "AWS::S3::Bucket"
    DeletionPolicy: "Delete"
    UpdateReplacePolicy: "Delete"
    Properties:
      WebsiteConfiguration:
        IndexDocument: "index.html"
        ErrorDocument: "index.html"
      PublicAccessBlockConfiguration:
        RestrictPublicBuckets: false
        IgnorePublicAcls: false
        BlockPublicPolicy: false
        BlockPublicAcls: false
      BucketName: "smartquery-about"
      CorsConfiguration:
        CorsRules:
          - MaxAge: 3000
            AllowedMethods:
              - "GET"
              - "POST"
              - "PUT"
            AllowedOrigins:
              - "*"
            AllowedHeaders:
              - "*"
      OwnershipControls:
        Rules:
          - ObjectOwnership: "BucketOwnerEnforced"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - BucketKeyEnabled: true
            ServerSideEncryptionByDefault:
              SSEAlgorithm: "AES256"

  S3BucketPolicySmartqueryAbout:
    Type: "AWS::S3::BucketPolicy"
    DeletionPolicy: "Delete"
    UpdateReplacePolicy: "Delete"
    Properties:
      Bucket: !Ref S3BucketSmartqueryAbout
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Resource: "arn:aws:s3:::smartquery-about/*"
            Action: "s3:GetObject"
            Effect: "Allow"
            Principal: "*"
            Sid: "PublicReadGetObject"

Outputs:
  S3BucketCodePipeline:
    Value: !Ref S3BucketCodePipeline
    Export:
      Name: "S3BucketCodePipeline"
  S3BucketSmartqueryUi:
    Value: !Ref S3BucketSmartqueryUi
    Export:
      Name: "S3BucketSmartqueryUi"
  S3BucketSmartqueryAbout:
    Value: !Ref S3BucketSmartqueryAbout
    Export:
      Name: "S3BucketSmartqueryAbout"
