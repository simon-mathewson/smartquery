AWSTemplateFormatVersion: '2010-09-09'
Description: 'VPC template for Cloud with public and private subnets'

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: true

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: 10.0.3.0/24

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: 10.0.4.0/24

  ElasticIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc



  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2



  CodeBuildSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: 'Security group for CodeBuild'
      VpcId: !Ref VPC

  CodeBuildSecurityGroupToDbEgress:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId: !Ref CodeBuildSecurityGroup
      IpProtocol: tcp
      ToPort: 5432
      FromPort: 5432
      DestinationSecurityGroupId: !Ref CloudDbSecurityGroup

  CodeBuildSecurityGroupToInternetEgress:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId: !Ref CodeBuildSecurityGroup
      IpProtocol: -1
      CidrIp: 0.0.0.0/0
      Description: 'Allow all outbound traffic to internet'

  ELBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP/HTTPs ingress
      VpcId: !ImportValue CloudVpcId
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        IpProtocol: tcp
        ToPort: 443
        FromPort: 443

  ELBSecurityGroupToAppEgress:
    Type: AWS::EC2::SecurityGroupEgress  # prevent security group circular references
    Properties:
      GroupId: !Ref ELBSecurityGroup
      IpProtocol: tcp
      ToPort: 8080
      FromPort: 8080
      DestinationSecurityGroupId: !Ref ElasticBeanstalkEnvironmentSecurityGroup

  ElasticBeanstalkEnvironmentSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: 'Security group for Elastic Beanstalk environment'
      VpcId: !ImportValue CloudVpcId
      SecurityGroupIngress:
        - SourceSecurityGroupId: !Ref ELBSecurityGroup
          IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080

  ElasticBeanstalkEnvironmentSecurityGroupToDbEgress:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId: !Ref ElasticBeanstalkEnvironmentSecurityGroup
      IpProtocol: tcp
      ToPort: 5432
      FromPort: 5432
      DestinationSecurityGroupId: !Ref CloudDbSecurityGroup

  CloudDbSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: 'Security group for RDS PostgreSQL'
      VpcId: !Ref VPC

  DbSecurityGroupFromCodeBuildIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref CloudDbSecurityGroup
      IpProtocol: tcp
      ToPort: 5432
      FromPort: 5432
      SourceSecurityGroupId: !Ref CodeBuildSecurityGroup

  DbSecurityGroupFromElasticBeanstalkIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref CloudDbSecurityGroup
      IpProtocol: tcp
      ToPort: 5432
      FromPort: 5432
      SourceSecurityGroupId: !Ref ElasticBeanstalkEnvironmentSecurityGroup



Outputs:
  VpcId:
    Description: 'VPC ID'
    Value: !Ref VPC
    Export:
      Name: CloudVpcId

  PublicSubnet1:
    Description: 'Public Subnet 1'
    Value: !Ref PublicSubnet1
    Export:
      Name: CloudPublicSubnet1

  PublicSubnet2:
    Description: 'Public Subnet 2'
    Value: !Ref PublicSubnet2
    Export:
      Name: CloudPublicSubnet2

  PublicSubnets:
    Description: 'List of public subnet IDs'
    Value: !Join [',', [!Ref PublicSubnet1, !Ref PublicSubnet2]]
    Export:
      Name: CloudPublicSubnets

  PrivateSubnet1:
    Description: 'Private Subnet 1'
    Value: !Ref PrivateSubnet1
    Export:
      Name: CloudPrivateSubnet1

  PrivateSubnet2:
    Description: 'Private Subnet 2'
    Value: !Ref PrivateSubnet2
    Export:
      Name: CloudPrivateSubnet2

  PrivateSubnets:
    Description: 'List of private subnet IDs'
    Value: !Join [',', [!Ref PrivateSubnet1, !Ref PrivateSubnet2]]
    Export:
      Name: CloudPrivateSubnets

  CodeBuildSecurityGroup:
    Description: 'Security group for CodeBuild'
    Value: !Ref CodeBuildSecurityGroup
    Export:
      Name: CloudCodeBuildSecurityGroup

  ELBSecurityGroup:
    Description: 'Security group ID of the ELB'
    Value: !Ref ELBSecurityGroup 
    Export:
      Name: CloudELBSecurityGroup
      
  ElasticBeanstalkEnvironmentSecurityGroup:
    Description: 'Security group ID of the Elastic Beanstalk environment'
    Value: !Ref ElasticBeanstalkEnvironmentSecurityGroup 
    Export:
      Name: CloudElasticBeanstalkEnvironmentSecurityGroup

  CloudDbSecurityGroup:
    Description: 'Security group ID of the RDS PostgreSQL'
    Value: !Ref CloudDbSecurityGroup
    Export:
      Name: CloudDbSecurityGroup
